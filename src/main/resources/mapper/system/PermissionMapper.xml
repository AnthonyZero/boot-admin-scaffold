<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.anthonyzero.scaffold.system.mapper.PermissionMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.anthonyzero.scaffold.system.entity.Permission">
        <id column="permission_id" property="permissionId" />
        <result column="parent_id" property="parentId" />
        <result column="name" property="name" />
        <result column="url" property="url" />
        <result column="perms" property="perms" />
        <result column="type" property="type" />
        <result column="icon" property="icon" />
        <result column="order_num" property="orderNum" />
        <result column="create_time" property="createTime" />
        <result column="modify_time" property="modifyTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        permission_id, parent_id, name, url, perms, type, icon, order_num, create_time, modify_time
    </sql>

    <select id="findUserPermissions" resultMap="BaseResultMap" parameterType="string">
        SELECT
            p.*
        FROM
            role r
        JOIN user_role ur ON r.role_id = ur.role_id
        JOIN user u ON u.user_id = ur.user_id
        JOIN role_permission rp ON rp.role_id = r.role_id
        JOIN permission p ON p.permission_id = rp.permission_id
        WHERE 1 = 1
        AND u.username = #{username}
        AND p.perms is not null
        AND p.perms != ''
    </select>


    <select id="findUserMenus" resultMap="BaseResultMap" parameterType="string">
        SELECT
            p.*
        FROM
            role_permission rp
            JOIN permission p ON rp.permission_id = p.permission_id
            JOIN role r ON rp.ROLE_ID = r.ROLE_ID
            JOIN user_role ur ON ur.ROLE_ID = r.ROLE_ID
            JOIN `user` u ON u.USER_ID = ur.USER_ID
        WHERE
            1 = 1
            AND p.TYPE = 0
            AND u.username = #{username}
        ORDER BY
            p.order_num
    </select>

    <!-- 递归删除权限，findPermsChildren为自定义的 MySQL函数，作用为根据当前 权限ID递归查找出其所有下级权限ID包括自己-->
    <delete id="deletePermissions" parameterType="string">
        DELETE from permission
        WHERE permission_id in
        (
            SELECT t.permission_id FROM
            (
              SELECT permission_id FROM permission WHERE FIND_IN_SET( permission_id, findPermsChildren ( #{permissionId} ) ) > 0
            ) t
        )
    </delete>
</mapper>
